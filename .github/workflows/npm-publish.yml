name: Publish to NPM

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty for package.json version)'
        required: false
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'

    - name: Verify Node.js and npm versions
      run: |
        node --version
        npm --version
        npm whoami
        echo "Publishing as NPM user: $(npm whoami)"

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=moderate

    - name: Set version from input
      if: github.event.inputs.version != ''
      run: |
        npm version ${{ github.event.inputs.version }} --no-git-tag-version
        echo "PACKAGE_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV

    - name: Get version from package.json
      if: github.event.inputs.version == ''
      run: |
        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV

    - name: Verify package structure
      run: |
        echo "Publishing version: $PACKAGE_VERSION"
        ls -la
        cat package.json

    - name: Check if version already exists on NPM
      run: |
        if npm view syndicodex@$PACKAGE_VERSION version 2>/dev/null; then
          echo "Version $PACKAGE_VERSION already exists on NPM"
          exit 1
        else
          echo "Version $PACKAGE_VERSION is new, proceeding with publish"
        fi

    - name: Dry run npm publish
      run: npm publish --dry-run
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Verify published package
      run: |
        sleep 30  # Wait for NPM to propagate
        npm view syndicodex@$PACKAGE_VERSION

    - name: Create GitHub release summary
      run: |
        echo "## 🚀 SyndiCodex v$PACKAGE_VERSION Published Successfully!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 Package Information" >> $GITHUB_STEP_SUMMARY
        echo "- **Package**: syndicodex" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: $PACKAGE_VERSION" >> $GITHUB_STEP_SUMMARY
        echo "- **Registry**: https://www.npmjs.com/package/syndicodex" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🛠️ Installation" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "npm install -g syndicodex@$PACKAGE_VERSION" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Links" >> $GITHUB_STEP_SUMMARY
        echo "- [NPM Package](https://www.npmjs.com/package/syndicodex)" >> $GITHUB_STEP_SUMMARY
        echo "- [Documentation](https://github.com/Ethical-AI-Syndicate/syndicodex/blob/main/docs)" >> $GITHUB_STEP_SUMMARY